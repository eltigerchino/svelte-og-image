diff --git a/dist/index.edge.js b/dist/index.edge.js
index 089354ce4b62dde0fed3482e028ffade3d34b750..d4b4bc34c25636a8c00f6fcf2cfcf6349a4adc99 100644
--- a/dist/index.edge.js
+++ b/dist/index.edge.js
@@ -18763,7 +18763,7 @@ var loadDynamicAsset = ({ emoji }) => {
     return asset;
   };
 };
-async function render(satori, resvg, opts, defaultFonts, element) {
+async function render(satori, resvg, opts, element) {
   const options = Object.assign({
     width: 1200,
     height: 630,
@@ -18773,7 +18773,7 @@ async function render(satori, resvg, opts, defaultFonts, element) {
     width: options.width,
     height: options.height,
     debug: options.debug,
-    fonts: options.fonts || defaultFonts,
+    fonts: options.fonts,
     loadAdditionalAsset: loadDynamicAsset({
       emoji: options.emoji
     })
@@ -18980,23 +18980,13 @@ function assertValue(v, errorMessage) {
 // src/index.edge.ts
 var initializedResvg = initWasm(resvg_wasm);
 var initializedYoga = initYoga(yoga_wasm).then((yoga2) => Rl(yoga2));
-var fallbackFont = fetch(new URL("./noto-sans-v27-latin-regular.ttf", import.meta.url)).then((res) => res.arrayBuffer());
 var ImageResponse = class extends Response {
   constructor(element, options = {}) {
     const result = new ReadableStream({
       async start(controller) {
         await initializedYoga;
         await initializedResvg;
-        const fontData = await fallbackFont;
-        const fonts = [
-          {
-            name: "sans serif",
-            data: fontData,
-            weight: 700,
-            style: "normal"
-          }
-        ];
-        const result2 = await render(wl, resvg_wasm_exports, options, fonts, element);
+        const result2 = await render(wl, resvg_wasm_exports, options, element);
         controller.enqueue(result2);
         controller.close();
       }
diff --git a/dist/index.node.js b/dist/index.node.js
index c92983c67cbcc73d197d1ccd2a6f22345a2f7590..0b59ca4eb9da9f7eec929afc6808a57f36a6dd67 100644
--- a/dist/index.node.js
+++ b/dist/index.node.js
@@ -18765,7 +18765,7 @@ var loadDynamicAsset = ({ emoji }) => {
     return asset;
   };
 };
-async function render(satori2, resvg, opts, defaultFonts, element) {
+async function render(satori2, resvg, opts, element) {
   const options = Object.assign({
     width: 1200,
     height: 630,
@@ -18775,7 +18775,7 @@ async function render(satori2, resvg, opts, defaultFonts, element) {
     width: options.width,
     height: options.height,
     debug: options.debug,
-    fonts: options.fonts || defaultFonts,
+    fonts: options.fonts,
     loadAdditionalAsset: loadDynamicAsset({
       emoji: options.emoji
     })
@@ -18981,7 +18981,6 @@ function assertValue(v, errorMessage) {
 
 // src/index.node.ts
 var satori = wl.default || wl;
-var fontData = fs.readFileSync(fileURLToPath(join(import.meta.url, "../noto-sans-v27-latin-regular.ttf")));
 var yoga_wasm = fs.readFileSync(fileURLToPath(join(import.meta.url, "../yoga.wasm")));
 var resvg_wasm = fs.readFileSync(fileURLToPath(join(import.meta.url, "../resvg.wasm")));
 var initializedResvg = initWasm(resvg_wasm);
@@ -18995,15 +18994,7 @@ var ImageResponse = class extends Response {
       async start(controller) {
         await initializedYoga;
         await initializedResvg;
-        const fonts = [
-          {
-            name: "sans serif",
-            data: fontData,
-            weight: 700,
-            style: "normal"
-          }
-        ];
-        const result2 = await render(satori, resvg_wasm_exports, options, fonts, element);
+        const result2 = await render(satori, resvg_wasm_exports, options, element);
         controller.enqueue(result2);
         controller.close();
       }
diff --git a/dist/noto-sans-v27-latin-regular.ttf b/dist/noto-sans-v27-latin-regular.ttf
deleted file mode 100644
index 56941acbd71c3f37605075b20b38fe0c37c3ea26..0000000000000000000000000000000000000000
